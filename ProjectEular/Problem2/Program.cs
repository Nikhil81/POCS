using System;

namespace Problem2
{
    //Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
    //the first 10 terms will be:
    //1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    //By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    class Program
    {
        static void Main(string[] args)
        {
            //var result = BottomUpFib(10);
            var result = BottomUpFibCalculation(4000000);
            Console.WriteLine(result);
            Console.Read();
        }

        ///POC : bottomUp approach
        ///
        static long BottomUpFib(long number)
        {
            long[] f = new long[number + 1];
            f[0] = 1;
            f[1] = 1;
            for (int i = 2; i <= number; i++)
            {
                f[i] = f[i - 1] + f[i - 2];
                Console.WriteLine(f[i]);

            }
            return f[number];
        }


        //Solution to the problem 
        static long BottomUpFibCalculation(long number)
        {
            //long result = 0;
            //long[] f = new long[number + 1];
            //f[0] = 1;
            //f[1] = 1;
            //for (long i = 2; i <= number; i++)
            //{
            //    f[i] = f[i - 1] + f[i - 2];
            //    if (f[i] % 2 == 0)
            //    {
            //        result += f[i];
            //    }
            //    //Console.WriteLine($"f[i] = {f[i]} ****");
            //}

            long[] fib = { 2, 0 };
            int i = 0;
            long summed = 0;

            while (fib[i] < 4000000)
            {
                summed += fib[i];
                i = (i + 1) % 2;
                fib[i] = 4 * fib[(i + 1) % 2] + fib[i];
            }
            return summed;
        }
    }
}
